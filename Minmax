def minimax(depth, idx, is_maximizing, values, max_depth):
    if depth == max_depth:  # leaf node
        offset = (2**max_depth) - 1
        return values[idx-offset]
        

    if is_maximizing:
        best = float("-inf")
        for child_idx in [2 * idx + 1, 2 * idx + 2]:  # explore both children
            value = minimax(depth + 1, child_idx, False, values, max_depth)
            best = max(best, value)
        return best
    else:  # minimizing
        best = float("inf")
        for child_idx in [2 * idx + 1, 2 * idx + 2]:  # explore both children
            value = minimax(depth + 1, child_idx, True, values, max_depth)
            best = min(best, value)
        return best



values = [3, 5, 2, 9]   # leaf node values
tree_depth = 2          # height of the tree

print("The optimal value is:", minimax(0, 0, True, values, tree_depth))
